#!/bin/bash
g="${b}\033[1;30m"
b="\033[0m"
b1="$b\033[1;37m"
r="${b}\033[1;31m"
r1="${b}\033[31m"
A="${b}\033[1;34m"
A1="${b}\033[34m"
ac="${b}\e[1;36m"
ac1="${b}\e[36m"
v="${b}\033[1;32m"
v1="${b}\033[32m"
m="$b\033[1;35m"
m1="$b\033[35m"
a="$b\033[1;33m"
a1="$b\033[33m"
cy="$b\033[38;2;23;147;209m"
trap alv INT
alv() {
echo
sleep 0.3
printf "$v [$b1+$v]${b1} Finalizado\n"
printf "$v [$b1+$v]${b1} Andiquis$b\n "
echo
sleep 0.3
exit
}
case $(command -v python2) in
"")
jk="$(ping -c 1 -q www.google.com >&/dev/null; echo $?)"
case $jk in
0)
;;
*)
echo -e "\n$r[-]$b1 Banner-p:$r No Hay Conexion A Internet.\n$b"
exit
esac
clear
echo -e "$r\n▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄ $A[$b+$A]${b}$b1 Creador:    $a Anderson$r\n████▌▄▌▄▐▐▌█████ $A[$b+$A]${b}$b1 Herramienta:$a Banner-pro$r\n████▌▄▌▄▐▐▌▀████ $A[$b+$A]${b}$b1 Github:     $a https://github.com/Andiquis$r\n▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ $A[$b+$A]${b}$b1 Youtube:    $a http://www.youtube.com/c/...$r\n$b"
echo
sleep 0.5
printf "${v}Instalando Dependencias..!$b\n"
pkg install -y python python2 python3 cmatrix sl
source 'T-banner'
exit
esac
b1() {
clear
sleep 0.0
echo -e '\033[1;32m\n╭━━╮╱╭━━━╮╭━╮╱╭╮╭━╮╱╭╮╭━━━╮╭━━━╮╱╱╱╱╭━━━╮╭━━━╮╭━━━╮\n┃╭╮┃╱┃╭━╮┃┃┃╰╮┃┃┃┃╰╮┃┃┃╭━━╯┃╭━╮┃╱╱╱╱┃╭━╮┃┃╭━╮┃┃╭━╮┃\n┃╰╯╰╮┃┃╱┃┃┃╭╮╰╯┃┃╭╮╰╯┃┃╰━━╮┃╰━╯┃╱╱╱╱┃╰━╯┃┃╰━╯┃┃┃╱┃┃\n┃╭━╮┃┃╰━╯┃┃┃╰╮┃┃┃┃╰╮┃┃┃╭━━╯┃╭╮╭╯╭━━╮┃╭━━╯┃╭╮╭╯┃┃╱┃┃\n┃╰━╯┃┃╭━╮┃┃┃╱┃┃┃┃┃╱┃┃┃┃╰━━╮┃┃┃╰╮╰━━╯┃┃╱╱╱┃┃┃╰╮┃╰━╯┃\n╰━━━╯╰╯╱╰╯╰╯╱╰━╯╰╯╱╰━╯╰━━━╯╰╯╰━╯╱╱╱╱╰╯╱╱╱╰╯╰━╯╰━━━╯\n╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱╱\n\033[0m'
printf " $A[$b1+$A]${b1} Creador:$a     Anderson\n"
printf " $A[$b1+$A]${b1} Herramienta:$a Banner-pro\n"
printf " $A[$b1+$A]${b1} GitHub:$a      https://github.com/Andiquis\n"
printf " $A[$b1+$A]${b1} YouTube:$a     http://www.youtube.com/c/...$b\n\n"
}
b2() {
clear
sleep 0.0
echo -e "\033[1;32m
┏━━┓┏━┳┓┏━━┓┏━━┓────┏━┓┏━┓┏━┓
┃┏┓┃┃┃┃┃┗┓┓┃┗┃┃┛╔══╗┃╋┃┃╋┃┃┃┃
┃┣┫┃┃┃┃┃┏┻┛┃┏┃┃┓╚══╝┃┏┛┃┓┫┃┃┃
┗┛┗┛┗┻━┛┗━━┛┗━━┛────┗┛░┗┻┛┗━┛\n\033[0m"
printf "$A[$b1+$A]${b1} Creador:$a     Anderson\n"
printf "$A[$b1+$A]${b1} Herramienta:$a Banner-pro\n"
printf "$A[$b1+$A]${b1} GitHub:$a      https://github.com/Andiquis\n"
printf "$A[$b1+$A]${b1} YouTube:$a     http://www.youtube.com/c/...$b\n\n"
}
banner() {
b1
sleep 0.5
echo -e "${v}Elige un  banner ...jj:$b"
echo -e " $A[${b1}01$A]${b1} Kuaker
 $A[${b1}02$A]${b1} Hacker
 $A[${b1}03$A]${b1} Ruby
 $A[${b1}04$A]${b1} Bash
 $A[${b1}05$A]${b1} Craneo
 $A[${b1}06$A]${b1} Craneo2
 $A[${b1}07$A]${b1} Ghost
 $A[${b1}08$A]${b1} Scorpion
 $A[${b1}09$A]${b1} Cobra
 $A[${b1}10$A]${b1} Arma
 $A[${b1}11$A]${b1} Kali
 $A[${b1}12$A]${b1} Diablo
 $A[${b1}13$A]${b1} Pulpo
 $A[${b1}14$A]${b1} Calavera
 $A[${b1}15$A]${b1} Personalizar banner
$b"
printf " $A[$b1+$A]$v Opción:$b "
read banner
case $banner in
01|1)
banner=$(cat ~/Banner-pro/.Banners/kuaker)
;;
02|2)
banner=$(cat ~/Banner-pro/.Banners/hacker)
;;
03|3)
banner=$(cat ~/Banner-pro/.Banners/ruby)
;;
04|4)
banner=$(cat ~/Banner-pro/.Banners/bash)
;;
05|5)
banner=$(cat ~/Banner-pro/.Banners/craneo)
;;
06|6)
banner=$(cat ~/Banner-pro/.Banners/craneo2)
;;
07|7)
banner=$(cat ~/Banner-pro/.Banners/ghost)
;;
08|8)
banner=$(cat ~/Banner-pro/.Banners/scorpion)
;;
09|9)
banner=$(cat ~/Banner-pro/.Banners/cobra)
;;
10)
banner=$(cat ~/Banner-pro/.Banners/arma)
;;
11)
banner=$(cat ~/Banner-pro/.Banners/kali)
;;
12)
banner=$(cat ~/Banner-pro/.Banners/diablo)
;;
13)
banner=$(cat ~/Banner-pro/.Banners/pulpo)
;;
14)
banner=$(cat ~/Banner-pro/.Banners/calavera)
;;
15)
case $(command -v nano) in
"")
case $(ping -c 1 -q www.google.com >&/dev/null; echo $?) in
0)
echo -e "${A}Instalando Dependencias..."
sleep 0.8
pkg install -y nano vim
;;
*)
echo -e "$r[-]\033[0m  Esta Funcion Necesita Conexion A Internet."
exit
esac
esac
echo -e "${v}Pega el banner y cuando termines das 'CTRL O y Enter' luego 'CTRL X'$b"
read -p "Presiona Enter Para Continuar: "
nano .Banner
banner=$(cat .Banner)
;;
*)
echo -e " $r[-]$b1 Banner invalido..xd!$b"
sleep 0.5
banner
esac
}
color() {
b1
sleep 0.5
echo -e "${v}Elige un color para el banner...:$b"
echo -e " $A[${b1}01$A]${b} Blanco
 $A[${b1}02$A]${b1} Blanco2
 $A[${b1}03$A]${r} Rojo
 $A[${b1}04$A]${r1} Rojo2
 $A[${b1}05$A]${A} Azul
 $A[${b1}06$A]${A1} Azul2
 $A[${b1}07$A]${ac} Celeste
 $A[${b1}08$A]${ac1} Celeste2
 $A[${b1}09$A]${v} Verde
 $A[${b1}10$A]${v1} Verde2
 $A[${b1}11$A]${m} Morado
 $A[${b1}12$A]${m1} Morado2
 $A[${b1}13$A]${a} Amarillo
 $A[${b1}14$A]${a1} Amarillo2
 $A[${b1}15$A]${g} color-V:
$b"
printf " $A[$b1+$A]$v Opción:$b "
read color
case $color in
01|1)
Color=$b
;;
02|2)
Color=$b1
;;
03|3)
Color=$r
;;
04|4)
Color=$r1
;;
05|5)
Color=$A
;;
06|6)
Color=$A1
;;
07|7)
Color=$ac
;;
08|8)
Color=$ac1
;;
09|9)
Color=$v
;;
10)
Color=$v1
;;
11)
Color=$m
;;
12)
Color=$m1
;;
13)
Color=$a
;;
14)
Color=$a1
;;
15)
Color=$g
;;
*)
echo -e " $r[-]$b1 Color invalido..xd!$b"
sleep 0.5
color
esac
}
titilo() {
b1
echo -ne "${v}Máximo <40
Cuantas veces quiere que titule: $b"
read veces
}
banner
color
titilo
if [ -e $PREFIX/etc/motd ]; then
rm $PREFIX/etc/motd
fi
if [ -e $PREFIX/etc/bash.bashrc ]; then
rm $PREFIX/etc/bash.bashrc
echo "if [ -x /data/data/com.termux/files/usr/libexec/termux/command-not-found ]; then" >> $PREFIX/etc/bash.bashrc
echo "  command_not_found_handle() {" >> $PREFIX/etc/bash.bashrc
echo '          /data/data/com.termux/files/usr/libexec/termux/command-not-found "$1"' >> $PREFIX/etc/bash.bashrc
echo "  }" >> $PREFIX/etc/bash.bashrc
echo "fi" >> $PREFIX/etc/bash.bashrc
echo >> $PREFIX/etc/bash.bashrc
echo "PS1='\[+]$ '" >> $PREFIX/etc/bash.bashrc
fi
echo "python2 ~/Banner-pro/Banner" >> $PREFIX/etc/bash.bashrc
rm Banner &>> /dev/null
echo "#!/bin/python2" >> Banner
echo "#coding=utf-8" >> Banner
echo "import os,sys,time" >> Banner
echo "def maung(n):" >> Banner
echo "    for m in n + '\n':" >> Banner
echo "        sys.stdout.write(m)" >> Banner
echo "        sys.stdout.flush()" >> Banner
echo "        time.sleep(0.001)" >> Banner
echo 'banner = """' >> Banner
printf "$Color" >> Banner
printf "$banner" >> Banner
printf '\033[0m"""\n' >> Banner
echo 'os.system("clear")' >> Banner
echo "maung(banner)" >> Banner
case $veces in
"")
veces=40
nn=1
while [ $nn -le $veces ]; do
nn=$(($nn + 1))
echo 'os.system("clear")' >> Banner
echo "print (banner)" >> Banner
done
echo "print" >> Banner
sleep 1
;;
*)
nn=1
while [ $nn -le $veces ]; do
nn=$(($nn + 1))
echo 'os.system("clear")' >> Banner
echo "print (banner)" >> Banner
done
echo "print" >> Banner
sleep 1
esac
if [ -e .Banner ]; then
rm .Banner
fi
b1
echo -ne "${v}Ver Banner(si/no):$b "
read yaa
case $yaa in
si|y|SI|Y)
python2 Banner
;;
no|n|NO|N)
echo -e "$b"
exit
;;
*)
echo -e "$b"
exit
esac
